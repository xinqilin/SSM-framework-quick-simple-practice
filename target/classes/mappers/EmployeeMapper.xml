<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.mapper.EmployeeMapper">
	<resultMap id="BaseResultMap"
		type="com.ssm.bean.Employee">
		<id column="id" jdbcType="INTEGER" property="empId" />
		<result column="lastName" jdbcType="VARCHAR" property="empName" />
		<result column="gender" jdbcType="CHAR" property="gender" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="d_id" jdbcType="INTEGER" property="dId" />
	</resultMap>
	<resultMap id="WitdDeptResultMap"
		type="com.ssm.bean.Employee">
		<id column="id" jdbcType="INTEGER" property="empId" />
		<result column="lastName" jdbcType="VARCHAR" property="empName" />
		<result column="gender" jdbcType="CHAR" property="gender" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="d_id" jdbcType="INTEGER" property="dId" />
		<!-- 联合查询一对一时，对象成员使用 association映射 -->
		<association property="department"
			javaType="com.ssm.bean.Department">
			<id column="id" property="deptId" />
			<result column="departmentname" property="deptName" />
		</association>
	</resultMap>


	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, lastName, gender, email, d_id
	</sql>
	<sql id="WithDept_Column_List">
		e.id, e.lastname, e.gender, e.email, e.d_id, d.id,
		d.departmentname
	</sql>
	<!-- List<Employee> selectByExampleWithDept(EmployeeExample example); -->
	<!-- Employee selectByPrimaryKeyWithDept(Integer empId); -->
	<!-- 查询员工带部门信息 -->
	<select id="selectByExampleWithDept"
		parameterType="com.ssm.bean.EmployeeExample"
		resultMap="WitdDeptResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="WithDept_Column_List" />
		from employee e left join department d on e.id = d.id
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKeyWithDept"
		parameterType="java.lang.Integer" resultMap="WitdDeptResultMap">
		select
		<include refid="WithDept_Column_List" />
		from employee e left join department d on e.id = d.id
		where e.id = #{empId,jdbcType=INTEGER}
	</select>
	<!-- 查询员工不带部门信息 -->
	<select id="selectByExample"
		parameterType="com.ssm.bean.EmployeeExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from employee
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from employee
		where emp_id = #{empId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from employee
		where emp_id =
		#{empId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.ssm.bean.EmployeeExample">
		delete from employee
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert"
		parameterType="com.ssm.bean.Employee">
		insert into employee (emp_id, emp_name, gender,
		email,
		d_id)
		values (#{empId,jdbcType=INTEGER}, #{empName,jdbcType=VARCHAR},
		#{gender,jdbcType=CHAR},
		#{email,jdbcType=VARCHAR},
		#{dId,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective"
		parameterType="com.ssm.bean.Employee">
		insert into employee
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="empId != null">
				id,
			</if>
			<if test="empName != null">
				lastname,
			</if>
			<if test="gender != null">
				gender,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="dId != null">
				d_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="empId != null">
				#{empId,jdbcType=INTEGER},
			</if>
			<if test="empName != null">
				#{empName,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				#{gender,jdbcType=CHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="dId != null">
				#{dId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.ssm.bean.EmployeeExample"
		resultType="java.lang.Long">
		select count(*) from employee
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update employee
		<set>
			<if test="record.empId != null">
				id = #{record.empId,jdbcType=INTEGER},
			</if>
			<if test="record.empName != null">
				lastname = #{record.empName,jdbcType=VARCHAR},
			</if>
			<if test="record.gender != null">
				gender = #{record.gender,jdbcType=CHAR},
			</if>
			<if test="record.email != null">
				email = #{record.email,jdbcType=VARCHAR},
			</if>
			<if test="record.dId != null">
				d_id = #{record.dId,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update employee
		set id = #{record.empId,jdbcType=INTEGER},
		lastname =
		#{record.empName,jdbcType=VARCHAR},
		gender =
		#{record.gender,jdbcType=CHAR},
		email =
		#{record.email,jdbcType=VARCHAR},
		d_id = #{record.dId,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.ssm.bean.Employee">
		update employee
		<set>
			<if test="empName != null">
				lastname = #{empName,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				gender = #{gender,jdbcType=CHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="dId != null">
				d_id = #{dId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{empId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.ssm.bean.Employee">
		update employee
		set lastname =
		#{empName,jdbcType=VARCHAR},
		gender = #{gender,jdbcType=CHAR},
		email =
		#{email,jdbcType=VARCHAR},
		d_id = #{dId,jdbcType=INTEGER}
		where id =
		#{empId,jdbcType=INTEGER}
	</update>
</mapper>